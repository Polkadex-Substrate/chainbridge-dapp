{"version":3,"sources":["../../src/index.ts"],"names":["WalletLinkConnector","url","appName","appLogoUrl","darkMode","supportedChainIds","accounts","account","provider","chainId","walletLink","m","WalletLink","deactivate","handleChainChanged","handleAccountsChanged","AbstractConnector","emitUpdate","ConnectorEvent","emitError","emitDeactivate"],"mappings":"mgBAGA,IASaA,EAAb,Y,QASI,SAAF,K,MAAcC,QAAKC,YAASC,eAAYC,a,OACtC,cAAM,CAAEC,kBAAmB,CAnB/B,MAmBI,MAEA,MACA,YACA,eACA,WAAgBD,IAAhB,E,IAfJ,G,EAAA,G,sEAAE,IAAF,cAAE,SAAF,wB,MAmBS,K,oCAUiB,6CAA+C,mBAAgCE,EAAhC,OAA/C,eAAhBC,GAKN,OAHA,6BAAiC,EAAjC,oBACA,gCAAoC,EAApC,uBAEO,CAAEC,SAAU,EAAZ,SAA2BC,QA3CtC,EA2CyDF,QAASA,O,iBAfzD,EAAKG,W,uBACiB,uEAA0B,YAAC,4BAAIC,OAAJ,EAAIA,EAAC,SAAL,QAA3B,eAAnBC,GACN,aAAkB,SAChBV,QAAS,EADO,QAEhBE,SAAU,EAAKA,UACX,aAAkB,CAAED,WAAY,EAAKA,YAH3C,KAKA,WAAgB,8BAAiC,EAAjC,IAnCtB,M,mDASA,oCAAE,EAAF,2BAsCI,uBAAO,KAAP,UAtCJ,oCAAE,EAAF,sBA0CI,uBAnDJ,IASE,EAAF,0BA8CI,uBAAO,yCAAwC,mBAAgCG,EAAhC,OA9CnD,oCAAE,EAAF,WAiDSO,WACL,4CAA6C,KAA7C,oBACA,+CAAgD,KAAhD,wBAnDF,EAAF,qB,OAuDI,2BACA,iB,kBAxDJ,oCAAE,EAAF,mBA2DUC,YAIN,gBAAgB,CAAEL,aA/DpB,EAAF,sBAkEUM,YAIN,gBAAgB,CAAER,QAASD,EAAQ,MAtEvC,S,6FATsBU,EAAtB,Y,4BAGgBX,Q,MAAkD,MAAlDA,kB,6BAEZ,oB,oHALJ,WAcYY,Y,KAIR,KAAUC,IAAV,W,EAlBJ,UAqBYC,Y,KAIR,KAAUD,IAAV,U,EAzBJ,eA4BYE,W,KAIR,KAAUF,IAAV,a,EAhCJ","file":"static/js/19.616b87ba.chunk.js","sourcesContent":["import { EventEmitter } from 'events'\nimport { AbstractConnectorArguments, ConnectorUpdate, ConnectorEvent } from '@web3-react/types'\n\nexport abstract class AbstractConnector extends EventEmitter {\n  public readonly supportedChainIds?: number[]\n\n  constructor({ supportedChainIds }: AbstractConnectorArguments = {}) {\n    super()\n    this.supportedChainIds = supportedChainIds\n  }\n\n  public abstract async activate(): Promise<ConnectorUpdate>\n  public abstract async getProvider(): Promise<any>\n  public abstract async getChainId(): Promise<number | string>\n  public abstract async getAccount(): Promise<null | string>\n  public abstract deactivate(): void\n\n  protected emitUpdate(update: ConnectorUpdate): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Update}' with payload`, update)\n    }\n    this.emit(ConnectorEvent.Update, update)\n  }\n\n  protected emitError(error: Error): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Error}' with payload`, error)\n    }\n    this.emit(ConnectorEvent.Error, error)\n  }\n\n  protected emitDeactivate(): void {\n    if (__DEV__) {\n      console.log(`Emitting '${ConnectorEvent.Deactivate}'`)\n    }\n    this.emit(ConnectorEvent.Deactivate)\n  }\n}\n"],"sourceRoot":""}